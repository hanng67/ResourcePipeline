# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: Default
  demands: 
    UnityBuildServer

jobs:
  - job: Prepare
    steps:

    - task: DeleteFiles@1
      displayName: 'Clean up old artifact'
      inputs:
        SourceFolder: '$(Build.ArtifactStagingDirectory)'
        Contents: '**/*'

    #get the previously secured library (if any) for performance reasons
    - task: DeleteFiles@1
      displayName: 'Delete old library'
      inputs:
        SourceFolder: '$(Build.Repository.LocalPath)\Library'
        Contents: '**/*'
    - task: CmdLine@2
      displayName: 'Restore library from the last bulid for performance'
      inputs:
        script: 'if EXIST "$(Build.BinariesDirectory)\Library\" move "$(Build.BinariesDirectory)\Library" "$(Build.Repository.LocalPath)\Library"'
    #unity PC build
  - job: BuildGameWindows
    dependsOn: Prepare
    steps:
    - task: UnityBuildTask@3
      inputs:
        buildTarget: 'standalone'
        unityEditorsPathMode: 'unityHub'
        outputPath: '$(Build.BinariesDirectory)\Build'
        outputFileName: 'demoBuild'
    # secure the library for performance reasons
    - task: DeleteFiles@1
      displayName: 'Clean up some library'
      inputs:
        SourceFolder: '$(Build.BinariesDirectory)\Library'
        Contents: '**/*'
    - task: CmdLine@2
      displayName: 'Move to file over to be save for the next build'
      inputs:
        script: 'move "$(Build.Repository.LocalPath)\Library" "$(Build.BinariesDirectory)\Library"'


